/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.8
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

package flame



import _ "runtime/cgo"
import "unsafe"

type _ unsafe.Pointer



type _swig_fnptr *byte
type _swig_memberptr *byte

//extern flameSwigCgocall
func SwigCgocall()
//extern flameSwigCgocallDone
func SwigCgocallDone()
//extern flameSwigCgocallBack
func SwigCgocallBack()
//extern flameSwigCgocallBackDone
func SwigCgocallBackDone()

const EPSILON float64 = 1E-9
type SwigcptrIntArray uintptr

func (p SwigcptrIntArray) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIntArray) SwigIsIntArray() {
}

func _swig_wrap_IntArray_array_set(SwigcptrIntArray, *int)

func (arg1 SwigcptrIntArray) SetArray(arg2 *int) {
	_swig_wrap_IntArray_array_set(arg1, arg2)
}

func _swig_wrap_IntArray_array_get(SwigcptrIntArray) *int

func (arg1 SwigcptrIntArray) GetArray() *int {
	return _swig_wrap_IntArray_array_get(arg1)
}

func _swig_wrap_IntArray_size_set(SwigcptrIntArray, int)

func (arg1 SwigcptrIntArray) SetSize(arg2 int) {
	_swig_wrap_IntArray_size_set(arg1, arg2)
}

func _swig_wrap_IntArray_size_get(SwigcptrIntArray) int

func (arg1 SwigcptrIntArray) GetSize() int {
	return _swig_wrap_IntArray_size_get(arg1)
}

func _swig_wrap_IntArray_bufsize_set(SwigcptrIntArray, int)

func (arg1 SwigcptrIntArray) SetBufsize(arg2 int) {
	_swig_wrap_IntArray_bufsize_set(arg1, arg2)
}

func _swig_wrap_IntArray_bufsize_get(SwigcptrIntArray) int

func (arg1 SwigcptrIntArray) GetBufsize() int {
	return _swig_wrap_IntArray_bufsize_get(arg1)
}

func _swig_wrap_new_IntArray() SwigcptrIntArray

func NewIntArray() IntArray {
	return _swig_wrap_new_IntArray()
}

func _swig_wrap_delete_IntArray(uintptr)

func DeleteIntArray(arg1 IntArray) {
	_swig_wrap_delete_IntArray(arg1.Swigcptr())
}

type IntArray interface {
	Swigcptr() uintptr
	SwigIsIntArray()
	SetArray(arg2 *int)
	GetArray() *int
	SetSize(arg2 int)
	GetSize() int
	SetBufsize(arg2 int)
	GetBufsize() int
}

type SwigcptrIndexFloat uintptr

func (p SwigcptrIndexFloat) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIndexFloat) SwigIsIndexFloat() {
}

func _swig_wrap_IndexFloat_index_set(SwigcptrIndexFloat, int)

func (arg1 SwigcptrIndexFloat) SetIndex(arg2 int) {
	_swig_wrap_IndexFloat_index_set(arg1, arg2)
}

func _swig_wrap_IndexFloat_index_get(SwigcptrIndexFloat) int

func (arg1 SwigcptrIndexFloat) GetIndex() int {
	return _swig_wrap_IndexFloat_index_get(arg1)
}

func _swig_wrap_IndexFloat_value_set(SwigcptrIndexFloat, float32)

func (arg1 SwigcptrIndexFloat) SetValue(arg2 float32) {
	_swig_wrap_IndexFloat_value_set(arg1, arg2)
}

func _swig_wrap_IndexFloat_value_get(SwigcptrIndexFloat) float32

func (arg1 SwigcptrIndexFloat) GetValue() float32 {
	return _swig_wrap_IndexFloat_value_get(arg1)
}

func _swig_wrap_new_IndexFloat() SwigcptrIndexFloat

func NewIndexFloat() IndexFloat {
	return _swig_wrap_new_IndexFloat()
}

func _swig_wrap_delete_IndexFloat(uintptr)

func DeleteIndexFloat(arg1 IndexFloat) {
	_swig_wrap_delete_IndexFloat(arg1.Swigcptr())
}

type IndexFloat interface {
	Swigcptr() uintptr
	SwigIsIndexFloat()
	SetIndex(arg2 int)
	GetIndex() int
	SetValue(arg2 float32)
	GetValue() float32
}

func _swig_wrap_PartialQuickSort(uintptr, int, int, int)

func PartialQuickSort(arg1 IndexFloat, arg2 int, arg3 int, arg4 int) {
	_swig_wrap_PartialQuickSort(arg1.Swigcptr(), arg2, arg3, arg4)
}

func Flame_Euclidean(*float32, *float32, int) float32
func Flame_Cosine(*float32, *float32, int) float32
func Flame_Pearson(*float32, *float32, int) float32
func Flame_UCPearson(*float32, *float32, int) float32
func Flame_SQPearson(*float32, *float32, int) float32
func Flame_DotProduct(*float32, *float32, int) float32
func Flame_Covariance(*float32, *float32, int) float32
func Flame_Manhattan(*float32, *float32, int) float32
func Flame_CosineDist(*float32, *float32, int) float32
func Flame_PearsonDist(*float32, *float32, int) float32
func Flame_UCPearsonDist(*float32, *float32, int) float32
func Flame_SQPearsonDist(*float32, *float32, int) float32
func Flame_DotProductDist(*float32, *float32, int) float32
func Flame_CovarianceDist(*float32, *float32, int) float32
type DistSimTypes int
func _swig_getDST_USER() DistSimTypes
var DST_USER DistSimTypes = _swig_getDST_USER()
func _swig_getDST_EUCLID() DistSimTypes
var DST_EUCLID DistSimTypes = _swig_getDST_EUCLID()
func _swig_getDST_COSINE() DistSimTypes
var DST_COSINE DistSimTypes = _swig_getDST_COSINE()
func _swig_getDST_PEARSON() DistSimTypes
var DST_PEARSON DistSimTypes = _swig_getDST_PEARSON()
func _swig_getDST_UC_PEARSON() DistSimTypes
var DST_UC_PEARSON DistSimTypes = _swig_getDST_UC_PEARSON()
func _swig_getDST_SQ_PEARSON() DistSimTypes
var DST_SQ_PEARSON DistSimTypes = _swig_getDST_SQ_PEARSON()
func _swig_getDST_DOT_PROD() DistSimTypes
var DST_DOT_PROD DistSimTypes = _swig_getDST_DOT_PROD()
func _swig_getDST_COVARIANCE() DistSimTypes
var DST_COVARIANCE DistSimTypes = _swig_getDST_COVARIANCE()
func _swig_getDST_MANHATTAN() DistSimTypes
var DST_MANHATTAN DistSimTypes = _swig_getDST_MANHATTAN()
func _swig_getDST_NULL() DistSimTypes
var DST_NULL DistSimTypes = _swig_getDST_NULL()
func GetBasicDistFunctions() **_swig_fnptr
type FlameObjectTypes int
func _swig_getOBT_NORMAL() FlameObjectTypes
var OBT_NORMAL FlameObjectTypes = _swig_getOBT_NORMAL()
func _swig_getOBT_SUPPORT() FlameObjectTypes
var OBT_SUPPORT FlameObjectTypes = _swig_getOBT_SUPPORT()
func _swig_getOBT_OUTLIER() FlameObjectTypes
var OBT_OUTLIER FlameObjectTypes = _swig_getOBT_OUTLIER()
type SwigcptrFlame uintptr

func (p SwigcptrFlame) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrFlame) SwigIsFlame() {
}

func _swig_wrap_Flame_simtype_set(SwigcptrFlame, int)

func (arg1 SwigcptrFlame) SetSimtype(arg2 int) {
	_swig_wrap_Flame_simtype_set(arg1, arg2)
}

func _swig_wrap_Flame_simtype_get(SwigcptrFlame) int

func (arg1 SwigcptrFlame) GetSimtype() int {
	return _swig_wrap_Flame_simtype_get(arg1)
}

func _swig_wrap_Flame_N_set(SwigcptrFlame, int)

func (arg1 SwigcptrFlame) SetN(arg2 int) {
	_swig_wrap_Flame_N_set(arg1, arg2)
}

func _swig_wrap_Flame_N_get(SwigcptrFlame) int

func (arg1 SwigcptrFlame) GetN() int {
	return _swig_wrap_Flame_N_get(arg1)
}

func _swig_wrap_Flame_K_set(SwigcptrFlame, int)

func (arg1 SwigcptrFlame) SetK(arg2 int) {
	_swig_wrap_Flame_K_set(arg1, arg2)
}

func _swig_wrap_Flame_K_get(SwigcptrFlame) int

func (arg1 SwigcptrFlame) GetK() int {
	return _swig_wrap_Flame_K_get(arg1)
}

func _swig_wrap_Flame_KMAX_set(SwigcptrFlame, int)

func (arg1 SwigcptrFlame) SetKMAX(arg2 int) {
	_swig_wrap_Flame_KMAX_set(arg1, arg2)
}

func _swig_wrap_Flame_KMAX_get(SwigcptrFlame) int

func (arg1 SwigcptrFlame) GetKMAX() int {
	return _swig_wrap_Flame_KMAX_get(arg1)
}

func _swig_wrap_Flame_graph_set(SwigcptrFlame, **int)

func (arg1 SwigcptrFlame) SetGraph(arg2 **int) {
	_swig_wrap_Flame_graph_set(arg1, arg2)
}

func _swig_wrap_Flame_graph_get(SwigcptrFlame) **int

func (arg1 SwigcptrFlame) GetGraph() **int {
	return _swig_wrap_Flame_graph_get(arg1)
}

func _swig_wrap_Flame_dists_set(SwigcptrFlame, **float32)

func (arg1 SwigcptrFlame) SetDists(arg2 **float32) {
	_swig_wrap_Flame_dists_set(arg1, arg2)
}

func _swig_wrap_Flame_dists_get(SwigcptrFlame) **float32

func (arg1 SwigcptrFlame) GetDists() **float32 {
	return _swig_wrap_Flame_dists_get(arg1)
}

func _swig_wrap_Flame_nncounts_set(SwigcptrFlame, *int)

func (arg1 SwigcptrFlame) SetNncounts(arg2 *int) {
	_swig_wrap_Flame_nncounts_set(arg1, arg2)
}

func _swig_wrap_Flame_nncounts_get(SwigcptrFlame) *int

func (arg1 SwigcptrFlame) GetNncounts() *int {
	return _swig_wrap_Flame_nncounts_get(arg1)
}

func _swig_wrap_Flame_weights_set(SwigcptrFlame, **float32)

func (arg1 SwigcptrFlame) SetWeights(arg2 **float32) {
	_swig_wrap_Flame_weights_set(arg1, arg2)
}

func _swig_wrap_Flame_weights_get(SwigcptrFlame) **float32

func (arg1 SwigcptrFlame) GetWeights() **float32 {
	return _swig_wrap_Flame_weights_get(arg1)
}

func _swig_wrap_Flame_cso_count_set(SwigcptrFlame, int)

func (arg1 SwigcptrFlame) SetCso_count(arg2 int) {
	_swig_wrap_Flame_cso_count_set(arg1, arg2)
}

func _swig_wrap_Flame_cso_count_get(SwigcptrFlame) int

func (arg1 SwigcptrFlame) GetCso_count() int {
	return _swig_wrap_Flame_cso_count_get(arg1)
}

func _swig_wrap_Flame_obtypes_set(SwigcptrFlame, string)

func (arg1 SwigcptrFlame) SetObtypes(arg2 string) {
	_swig_wrap_Flame_obtypes_set(arg1, arg2)
}

func _swig_wrap_Flame_obtypes_get(SwigcptrFlame) string

func (arg1 SwigcptrFlame) GetObtypes() string {
	return _swig_wrap_Flame_obtypes_get(arg1)
}

func _swig_wrap_Flame_fuzzyships_set(SwigcptrFlame, **float32)

func (arg1 SwigcptrFlame) SetFuzzyships(arg2 **float32) {
	_swig_wrap_Flame_fuzzyships_set(arg1, arg2)
}

func _swig_wrap_Flame_fuzzyships_get(SwigcptrFlame) **float32

func (arg1 SwigcptrFlame) GetFuzzyships() **float32 {
	return _swig_wrap_Flame_fuzzyships_get(arg1)
}

func _swig_wrap_Flame_count_set(SwigcptrFlame, int)

func (arg1 SwigcptrFlame) SetCount(arg2 int) {
	_swig_wrap_Flame_count_set(arg1, arg2)
}

func _swig_wrap_Flame_count_get(SwigcptrFlame) int

func (arg1 SwigcptrFlame) GetCount() int {
	return _swig_wrap_Flame_count_get(arg1)
}

func _swig_wrap_Flame_clusters_set(SwigcptrFlame, uintptr)

func (arg1 SwigcptrFlame) SetClusters(arg2 IntArray) {
	_swig_wrap_Flame_clusters_set(arg1, arg2.Swigcptr())
}

func _swig_wrap_Flame_clusters_get(SwigcptrFlame) SwigcptrIntArray

func (arg1 SwigcptrFlame) GetClusters() IntArray {
	return _swig_wrap_Flame_clusters_get(arg1)
}

func _swig_wrap_Flame_distfunc_set(SwigcptrFlame, *_swig_fnptr)

func (arg1 SwigcptrFlame) SetDistfunc(arg2 *_swig_fnptr) {
	_swig_wrap_Flame_distfunc_set(arg1, arg2)
}

func _swig_wrap_Flame_distfunc_get(SwigcptrFlame) *_swig_fnptr

func (arg1 SwigcptrFlame) GetDistfunc() *_swig_fnptr {
	return _swig_wrap_Flame_distfunc_get(arg1)
}

func _swig_wrap_new_Flame() SwigcptrFlame

func NewFlame() Flame {
	return _swig_wrap_new_Flame()
}

func _swig_wrap_delete_Flame(uintptr)

func DeleteFlame(arg1 Flame) {
	_swig_wrap_delete_Flame(arg1.Swigcptr())
}

type Flame interface {
	Swigcptr() uintptr
	SwigIsFlame()
	SetSimtype(arg2 int)
	GetSimtype() int
	SetN(arg2 int)
	GetN() int
	SetK(arg2 int)
	GetK() int
	SetKMAX(arg2 int)
	GetKMAX() int
	SetGraph(arg2 **int)
	GetGraph() **int
	SetDists(arg2 **float32)
	GetDists() **float32
	SetNncounts(arg2 *int)
	GetNncounts() *int
	SetWeights(arg2 **float32)
	GetWeights() **float32
	SetCso_count(arg2 int)
	GetCso_count() int
	SetObtypes(arg2 string)
	GetObtypes() string
	SetFuzzyships(arg2 **float32)
	GetFuzzyships() **float32
	SetCount(arg2 int)
	GetCount() int
	SetClusters(arg2 IntArray)
	GetClusters() IntArray
	SetDistfunc(arg2 *_swig_fnptr)
	GetDistfunc() *_swig_fnptr
}

func _swig_wrap_Flame_New() SwigcptrFlame

func Flame_New() Flame {
	return _swig_wrap_Flame_New()
}

func _swig_wrap_Flame_Clear(uintptr)

func Flame_Clear(arg1 Flame) {
	_swig_wrap_Flame_Clear(arg1.Swigcptr())
}

func _swig_wrap_Flame_SetDataMatrix(uintptr, **float32, int, int, int)

func Flame_SetDataMatrix(arg1 Flame, arg2 **float32, arg3 int, arg4 int, arg5 int) {
	_swig_wrap_Flame_SetDataMatrix(arg1.Swigcptr(), arg2, arg3, arg4, arg5)
}

func _swig_wrap_Flame_SetDistMatrix(uintptr, **float32, int)

func Flame_SetDistMatrix(arg1 Flame, arg2 **float32, arg3 int) {
	_swig_wrap_Flame_SetDistMatrix(arg1.Swigcptr(), arg2, arg3)
}

func _swig_wrap_Flame_DefineSupports(uintptr, int, float32)

func Flame_DefineSupports(arg1 Flame, arg2 int, arg3 float32) {
	_swig_wrap_Flame_DefineSupports(arg1.Swigcptr(), arg2, arg3)
}

func _swig_wrap_Flame_LocalApproximation(uintptr, int, float32)

func Flame_LocalApproximation(arg1 Flame, arg2 int, arg3 float32) {
	_swig_wrap_Flame_LocalApproximation(arg1.Swigcptr(), arg2, arg3)
}

func _swig_wrap_Flame_MakeClusters(uintptr, float32)

func Flame_MakeClusters(arg1 Flame, arg2 float32) {
	_swig_wrap_Flame_MakeClusters(arg1.Swigcptr(), arg2)
}


type SwigcptrVoid uintptr
type Void interface {
	Swigcptr() uintptr;
}
func (p SwigcptrVoid) Swigcptr() uintptr {
	return uintptr(p)
}

